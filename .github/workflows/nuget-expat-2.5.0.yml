#
# The version part is immutable in the name, but the package revision
# component after the dash should be kept in sync with `PKG_REV`.
# GitHub doesn't allow variables in the workflow names, so this cannot
# be automated.
#
# For new Expat versions, rename this file with a new version name
# to restart build numbers from `1`. This is necessary because GitHub
# maintains build numbers per workflow file name.
#
name: Expat v2.5.0-1

#
# When `publish-package` is set to `yes`, the workflow will build
# the package and publish it to nuget.org. Otherwise, a package
# will be built as an artifact and may be downloaded via GitHub UI.
#
# Published Nuget package will use the 4th version component as a
# package revision number because Nuget lacks package revision
# support.
#
# Without publishing, a Nuget package will be uploaded as an artifact
# of the workflow run and will be named using a pre-release version,
# which is an unfortunate workaround for a lack of build promotion
# support between GitHub and Nuget. This means that true pre-release
# packages will conflict with CI packages, but for this repository
# this is not an issue that will ever need to be addressed.
#
on:
  workflow_dispatch:
    inputs:
      publish-package:
        description: Publish Nuget Package (yes/no)?
        required: false

#
# For each new Expat release, change these variables:
#
#   * PKG_VER
#   * EXPAT_FNAME
#   * EXPAT_SHA256
#
# For each change in `PKG_VER`, `PKG_REV` must be reset to `1` (one).
#
# Package revision should be incremented by one every time package
# content is changed in any way, such as changing compiler options,
# adding or removing files, changing any text in README files, etc.
#
env:
  PKG_VER: 2.5.0
  PKG_REV: 1
  BUILD_NUMBER: ${{ github.run_number }}

  #
  # GitHub won't allow referencing `env` within this section, so we
  # need to spell out package version a couple more times.
  #
  EXPAT_FNAME: expat-2.5.0
  EXPAT_RNAME: R_2_5_0
  EXPAT_SHA256: 6b902ab103843592be5e99504f846ec109c1abb692e85347587f237a4ffa1033

  # for VS Community Edition, replace `Enterprise` with `Community` in the path
  VCVARSALL: 'C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvarsall'

  # Nuget Gallery (www.nuget.org) publish URL
  NUGET_PUB_URL: https://api.nuget.org/v3/index.json

defaults:
  run:
    shell: cmd

jobs:
  make-Expat:
    name: Make Expat
    runs-on: windows-2022
    
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Download Expat
      run: curl --location --output ${{ env.EXPAT_FNAME }}.tar.gz https://github.com/libexpat/libexpat/releases/download/${{ env.EXPAT_RNAME }}/${{ env.EXPAT_FNAME }}.tar.gz
           
    - name: Verify Expat checksum
      run: 7z h -scrcSHA256 ${{ env.EXPAT_FNAME }}.tar.gz | findstr /C:"SHA256 for data" | call devops\check-sha256 "${{ env.EXPAT_SHA256 }}"

    - name: Extract Expat
      run: |
        tar xzf ${{ env.EXPAT_FNAME }}.tar.gz 

    - name: Generate build projects
      working-directory: ${{ env.EXPAT_FNAME }}
      run: |
        call "${{ env.VCVARSALL }}" x64
        cmake -S . -B build -A x64 ^
            -DEXPAT_BUILD_TESTS=OFF ^
            -DEXPAT_BUILD_TOOLS=OFF ^
            -DEXPAT_SHARED_LIBS=OFF ^
            -DEXPAT_ENABLE_INSTALL=OFF ^
            -DEXPAT_BUILD_EXAMPLES=OFF

    - name: Build Expat
      working-directory: ${{ env.EXPAT_FNAME }}
      run: |
        call "${{ env.VCVARSALL }}" x64
        cmake --build build --config Debug
        cmake --build build --config Release
        
    - name: Collect artifacts
      working-directory: ${{ env.EXPAT_FNAME }}
      run: |
        mkdir ..\nuget\licenses
        copy COPYING ..\nuget\licenses\

        mkdir ..\nuget\build\native\include
        copy build\expat_config.h ..\nuget\build\native\include\
        xcopy /Y /S lib\*.h ..\nuget\build\native\include\

        mkdir ..\nuget\build\native\lib\x64\Debug
        copy /Y build\Debug\libexpatdMD.lib ..\nuget\build\native\lib\x64\Debug\libexpatMD.lib
        copy /Y build\Debug\libexpatdMD.pdb ..\nuget\build\native\lib\x64\Debug\libexpatMD.pdb

        mkdir ..\nuget\build\native\lib\x64\Release
        copy /Y build\Release\libexpatMD.lib ..\nuget\build\native\lib\x64\Release\

      # this is an unconventional use of the pre-release version - see README.md
    - name: Make CI Nuget package
      if: ${{ github.event.inputs.publish-package != 'yes' }}
      run: |
        nuget pack nuget\StoneSteps.Expat.VS2022.Static.nuspec -Suffix "ci.%BUILD_NUMBER%" -Version ${{ env.PKG_VER }}.${{ env.PKG_REV }}

    - name: Upload CI Nuget package
      if: ${{ github.event.inputs.publish-package != 'yes' }}
      uses: actions/upload-artifact@v3
      with:
        name: Expat CI Nuget package
        path: StoneSteps.Expat.VS2022.Static.${{ env.PKG_VER }}.${{ env.PKG_REV }}-ci.${{ env.BUILD_NUMBER }}.nupkg

      #
      # Use `-Version` explicitly to override the version in the manifest,
      # so we can usurp the 4th version component for the package revision.
      #
    - name: Make Nuget package
      if: ${{ github.event.inputs.publish-package == 'yes' }}
      run: |
        nuget pack nuget\StoneSteps.Expat.VS2022.Static.nuspec -Version ${{ env.PKG_VER }}.${{ env.PKG_REV }}

    - name: Publish Nuget package
      if: ${{ github.event.inputs.publish-package == 'yes' }}
      run: |
        nuget push StoneSteps.Expat.VS2022.Static.${{ env.PKG_VER }}.${{ env.PKG_REV }}.nupkg -Source ${{ env.NUGET_PUB_URL }} -ApiKey "${{ secrets.NUGET_API_KEY }}" -NonInteractive
